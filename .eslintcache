[{"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\index.js":"1","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\App.js":"2","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\components\\Products.js":"3","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\util.js":"4","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\components\\Filter.js":"5","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\components\\Cart.js":"6","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\redux\\store.js":"7","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\redux\\actions\\productAction.js":"8","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\redux\\types.js":"9","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\redux\\reducers\\productReducers.js":"10"},{"size":221,"mtime":1609916915702,"results":"11","hashOfConfig":"12"},{"size":3515,"mtime":1610913209245,"results":"13","hashOfConfig":"12"},{"size":3681,"mtime":1611001353515,"results":"14","hashOfConfig":"12"},{"size":109,"mtime":1610009981210,"results":"15","hashOfConfig":"12"},{"size":1107,"mtime":1610053167570,"results":"16","hashOfConfig":"12"},{"size":3788,"mtime":1610903143434,"results":"17","hashOfConfig":"12"},{"size":1115,"mtime":1610959126317,"results":"18","hashOfConfig":"12"},{"size":400,"mtime":1610954148946,"results":"19","hashOfConfig":"12"},{"size":47,"mtime":1610903143443,"results":"20","hashOfConfig":"12"},{"size":241,"mtime":1610956819121,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1l2axjp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\index.js",[],["45","46"],"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\App.js",[],"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\components\\Products.js",["47"],"import React, { useState, useEffect } from 'react';\r\nimport { Fade, Zoom } from 'react-reveal';\r\nimport Modal from 'react-modal';\r\nimport formatCurrency from '../util';\r\nimport './products.css';\r\nimport { connect } from 'react-redux';\r\nimport { fetchProducts } from '../redux/actions/productAction';\r\n\r\nfunction Products({ products, addToCart }) {\r\n  const [product, setProduct] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    setLoading(true);\r\n  }, []);\r\n\r\n  const openModal = (product) => {\r\n    setProduct(product);\r\n  };\r\n  const closeModal = () => {\r\n    setProduct();\r\n  };\r\n  return (\r\n    <div>\r\n      <Fade bottom cascade={true}>\r\n        {/* {loading ? ( */}\r\n        {!products ? (\r\n          <h4 className='text-danger'>Loading.....</h4>\r\n        ) : (\r\n          <ul className='products'>\r\n            {products.map((product) => (\r\n              <li key={product._id}>\r\n                <div className='product'>\r\n                  <a\r\n                    href={'#' + product._id}\r\n                    onClick={() => openModal(product)}\r\n                  >\r\n                    <div className='image-container'>\r\n                      <img\r\n                        src={product.image}\r\n                        alt={product.title}\r\n                      ></img>\r\n                    </div>\r\n                    <p>{product.title}</p>\r\n                  </a>\r\n                  <div className='product-price'>\r\n                    <div>{formatCurrency(product.price)}</div>\r\n                    <button\r\n                      className='button-primary'\r\n                      onClick={() => addToCart(product)}\r\n                    >\r\n                      Add To Cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </Fade>\r\n      {product && (\r\n        <Modal isOpen={true} onRequestClose={closeModal}>\r\n          <Zoom>\r\n            <button className='close-modal' onClick={closeModal}>\r\n              x\r\n            </button>\r\n            <div className='product-details'>\r\n              <img src={product.image} alt={product.title}></img>\r\n              <div className='product-details-description'>\r\n                <p>\r\n                  <strong>{product.title}</strong>\r\n                </p>\r\n                <p>{product.description}</p>\r\n                <p>\r\n                  Available Sizes:{' '}\r\n                  {product.availableSizes.map((x) => (\r\n                    <span>\r\n                      {' '}\r\n                      <button className='button'>{x}</button>\r\n                    </span>\r\n                  ))}\r\n                </p>\r\n                <div className='product-price'>\r\n                  <div>{formatCurrency(product.price)}</div>\r\n                  <button\r\n                    className='button primary'\r\n                    onClick={() => {\r\n                      addToCart(product);\r\n                      closeModal();\r\n                    }}\r\n                  >\r\n                    Add To Cart\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Zoom>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({ products: state.products.items }),\r\n  fetchProducts\r\n)(Products);\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   products: state.products.items,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch)=>({fetchProducts:()=>dispatch(fetchProducts())})\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(Products);\r\n","C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\util.js",[],"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\components\\Filter.js",[],"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\components\\Cart.js",[],"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\redux\\store.js",[],"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\redux\\actions\\productAction.js",[],"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\redux\\types.js",[],["48","49"],"C:\\Users\\dipak\\Desktop\\react-redux-ecommerce\\src\\redux\\reducers\\productReducers.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":11,"column":10,"nodeType":"56","messageId":"57","endLine":11,"endColumn":17},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar",["60"],["61"],"no-global-assign","no-unsafe-negation"]